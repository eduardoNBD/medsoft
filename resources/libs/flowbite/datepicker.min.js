!(function (e, t) {
    "object" == typeof exports && "object" == typeof module ? (module.exports = t()) : "function" == typeof define && define.amd ? define("Flowbite", [], t) : "object" == typeof exports ? (exports.Flowbite = t()) : (e.Flowbite = t());
})(self, function () {
    return (function () {
        "use strict";
        var e = {
                482: function (e, t, i) {
                    i.d(t, {
                        Z: function () {
                            return l;
                        },
                    });
                    var r = i(698),
                        a = i(963),
                        n = i(770);
                    function s(e) {
                        let t = Object.assign({}, e);
                        return delete t.inputs, delete t.allowOneSidedRange, delete t.maxNumberOfDates, t;
                    }
                    function d(e, t, i, a) {
                        (0, r.cF)(e, [[i, "changeDate", t]]), new n.Z(i, a, e);
                    }
                    function o(e, t) {
                        if (e._updating) return;
                        e._updating = !0;
                        let i = t.target;
                        if (void 0 === i.datepicker) return;
                        let r = e.datepickers,
                            a = { render: !1 },
                            n = e.inputs.indexOf(i),
                            s = 0 === n ? 1 : 0,
                            d = r[n].dates[0],
                            o = r[s].dates[0];
                        void 0 !== d && void 0 !== o
                            ? 0 === n && d > o
                                ? (r[0].setDate(o, a), r[1].setDate(d, a))
                                : 1 === n && d < o && (r[0].setDate(d, a), r[1].setDate(o, a))
                            : e.allowOneSidedRange || (void 0 === d && void 0 === o) || ((a.clear = !0), r[s].setDate(r[n].dates, a)),
                            r[0].picker.update().render(),
                            r[1].picker.update().render(),
                            delete e._updating;
                    }
                    class l {
                        constructor(e, t = {}) {
                            let i = Array.isArray(t.inputs) ? t.inputs : Array.from(e.querySelectorAll("input"));
                            if (i.length < 2) return;
                            (e.rangepicker = this), (this.element = e), (this.inputs = i.slice(0, 2)), (this.allowOneSidedRange = !!t.allowOneSidedRange);
                            let r = o.bind(null, this),
                                a = s(t),
                                n = [];
                            Object.defineProperty(this, "datepickers", { get: () => n }),
                                d(this, r, this.inputs[0], a),
                                d(this, r, this.inputs[1], a),
                                Object.freeze(n),
                                n[0].dates.length > 0 ? o(this, { target: this.inputs[0] }) : n[1].dates.length > 0 && o(this, { target: this.inputs[1] });
                        }
                        get dates() {
                            return 2 === this.datepickers.length ? [this.datepickers[0].dates[0], this.datepickers[1].dates[0]] : void 0;
                        }
                        setOptions(e) {
                            this.allowOneSidedRange = !!e.allowOneSidedRange;
                            let t = s(e);
                            this.datepickers[0].setOptions(t), this.datepickers[1].setOptions(t);
                        }
                        destroy() {
                            this.datepickers[0].destroy(), this.datepickers[1].destroy(), (0, r.uV)(this), delete this.element.rangepicker;
                        }
                        getDates(e) {
                            let t = e ? (t) => (0, a.p6)(t, e, this.datepickers[0].config.locale) : (e) => new Date(e);
                            return this.dates.map((e) => (void 0 === e ? e : t(e)));
                        }
                        setDates(e, t) {
                            let [i, r] = this.datepickers,
                                a = this.dates;
                            (this._updating = !0), i.setDate(e), r.setDate(t), delete this._updating, r.dates[0] !== a[1] ? o(this, { target: this.inputs[1] }) : i.dates[0] !== a[0] && o(this, { target: this.inputs[0] });
                        }
                    }
                },
                770: function (e, t, i) {
                    i.d(t, {
                        Z: function () {
                            return P;
                        },
                    });
                    var r = i(105),
                        a = i(560),
                        n = i(963),
                        s = i(698);
                    let d = {
                        en: {
                            days: days,
                            daysShort: days.map((e) => e.substring(0, 3)),
                            daysMin: days.map((e) => e.substring(0, 2)),
                            months: months,
                            monthsShort: months.map((e) => e.substring(0, 3)),
                            today: "Today",
                            clear: "Clear",
                            titleFormat: "MM y",
                        },
                    };
                    var o = {
                        autohide: !1,
                        beforeShowDay: null,
                        beforeShowDecade: null,
                        beforeShowMonth: null,
                        beforeShowYear: null,
                        calendarWeeks: !1,
                        clearBtn: !1,
                        dateDelimiter: ",",
                        datesDisabled: [],
                        daysOfWeekDisabled: [],
                        daysOfWeekHighlighted: [],
                        defaultViewDate: void 0,
                        disableTouchKeyboard: !1,
                        format: "dd/mm/yyyy",
                        language: "en",
                        maxDate: null,
                        maxNumberOfDates: 1,
                        maxView: 3,
                        minDate: null,
                        nextArrow:
                            '<svg class="w-4 h-4 rtl:rotate-180 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/></svg>',
                        orientation: "auto",
                        pickLevel: 0,
                        prevArrow:
                            '<svg class="w-4 h-4 rtl:rotate-180 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5H1m0 0 4 4M1 5l4-4"/></svg>',
                        showDaysOfWeek: !0,
                        showOnClick: !0,
                        showOnFocus: !0,
                        startView: 0,
                        title: "",
                        todayBtn: !1,
                        todayBtnMode: 0,
                        todayHighlight: !1,
                        updateOnBlur: !0,
                        weekStart: 0,
                    };
                    let l = document.createRange();
                    function c(e) {
                        return l.createContextualFragment(e);
                    }
                    function h(e) {
                        "none" !== e.style.display && (e.style.display && (e.dataset.styleDisplay = e.style.display), (e.style.display = "none"));
                    }
                    function u(e) {
                        "none" === e.style.display && (e.dataset.styleDisplay ? ((e.style.display = e.dataset.styleDisplay), delete e.dataset.styleDisplay) : (e.style.display = ""));
                    }
                    function $(e) {
                        e.firstChild && (e.removeChild(e.firstChild), $(e));
                    }
                    let { language: g, format: f, weekStart: p } = o;
                    function m(e, t) {
                        return e.length < 6 && t >= 0 && t < 7 ? (0, r.$C)(e, t) : e;
                    }
                    function y(e) {
                        return (e + 6) % 7;
                    }
                    function b(e, t, i, r) {
                        let a = (0, n.sG)(e, t, i);
                        return void 0 !== a ? a : r;
                    }
                    function k(e, t, i = 3) {
                        let r = parseInt(e, 10);
                        return r >= 0 && r <= i ? r : t;
                    }
                    function w(e, t) {
                        let i = Object.assign({}, e),
                            s = {},
                            d = t.constructor.locales,
                            { format: l, language: h, locale: u, maxDate: $, maxView: w, minDate: v, pickLevel: x, startView: D, weekStart: _ } = t.config || {};
                        if (i.language) {
                            let M;
                            if ((i.language !== h && (d[i.language] ? (M = i.language) : void 0 === d[(M = i.language.split("-")[0])] && (M = !1)), delete i.language, M)) {
                                h = s.language = M;
                                let S = u || d[g];
                                (u = Object.assign({ format: f, weekStart: p }, d[g])),
                                    h !== g && Object.assign(u, d[h]),
                                    (s.locale = u),
                                    l === S.format && (l = s.format = u.format),
                                    _ === S.weekStart && ((_ = s.weekStart = u.weekStart), (s.weekEnd = y(u.weekStart)));
                            }
                        }
                        if (i.format) {
                            let C = "function" == typeof i.format.toDisplay,
                                L = "function" == typeof i.format.toValue,
                                E = n.CL.test(i.format);
                            ((C && L) || E) && (l = s.format = i.format), delete i.format;
                        }
                        let F = v,
                            B = $;
                        if (
                            (void 0 !== i.minDate && ((F = null === i.minDate ? (0, a.by)(0, 0, 1) : b(i.minDate, l, u, F)), delete i.minDate),
                            void 0 !== i.maxDate && ((B = null === i.maxDate ? void 0 : b(i.maxDate, l, u, B)), delete i.maxDate),
                            B < F ? ((v = s.minDate = B), ($ = s.maxDate = F)) : (v !== F && (v = s.minDate = F), $ !== B && ($ = s.maxDate = B)),
                            i.datesDisabled &&
                                ((s.datesDisabled = i.datesDisabled.reduce((e, t) => {
                                    let i = (0, n.sG)(t, l, u);
                                    return void 0 !== i ? (0, r.$C)(e, i) : e;
                                }, [])),
                                delete i.datesDisabled),
                            void 0 !== i.defaultViewDate)
                        ) {
                            let O = (0, n.sG)(i.defaultViewDate, l, u);
                            void 0 !== O && (s.defaultViewDate = O), delete i.defaultViewDate;
                        }
                        if (void 0 !== i.weekStart) {
                            let V = Number(i.weekStart) % 7;
                            isNaN(V) || ((_ = s.weekStart = V), (s.weekEnd = y(V))), delete i.weekStart;
                        }
                        if (
                            (i.daysOfWeekDisabled && ((s.daysOfWeekDisabled = i.daysOfWeekDisabled.reduce(m, [])), delete i.daysOfWeekDisabled),
                            i.daysOfWeekHighlighted && ((s.daysOfWeekHighlighted = i.daysOfWeekHighlighted.reduce(m, [])), delete i.daysOfWeekHighlighted),
                            void 0 !== i.maxNumberOfDates)
                        ) {
                            let Y = parseInt(i.maxNumberOfDates, 10);
                            Y >= 0 && ((s.maxNumberOfDates = Y), (s.multidate = 1 !== Y)), delete i.maxNumberOfDates;
                        }
                        i.dateDelimiter && ((s.dateDelimiter = String(i.dateDelimiter)), delete i.dateDelimiter);
                        let A = x;
                        void 0 !== i.pickLevel && ((A = k(i.pickLevel, 2)), delete i.pickLevel), A !== x && (x = s.pickLevel = A);
                        let W = w;
                        void 0 !== i.maxView && ((W = k(i.maxView, w)), delete i.maxView), (W = x > W ? x : W) !== w && (w = s.maxView = W);
                        let N = D;
                        if ((void 0 !== i.startView && ((N = k(i.startView, N)), delete i.startView), N < x ? (N = x) : N > w && (N = w), N !== D && (s.startView = N), i.prevArrow)) {
                            let H = c(i.prevArrow);
                            H.childNodes.length > 0 && (s.prevArrow = H.childNodes), delete i.prevArrow;
                        }
                        if (i.nextArrow) {
                            let K = c(i.nextArrow);
                            K.childNodes.length > 0 && (s.nextArrow = K.childNodes), delete i.nextArrow;
                        }
                        if ((void 0 !== i.disableTouchKeyboard && ((s.disableTouchKeyboard = "ontouchstart" in document && !!i.disableTouchKeyboard), delete i.disableTouchKeyboard), i.orientation)) {
                            let T = i.orientation.toLowerCase().split(/\s+/g);
                            (s.orientation = { x: T.find((e) => "left" === e || "right" === e) || "auto", y: T.find((e) => "top" === e || "bottom" === e) || "auto" }), delete i.orientation;
                        }
                        if (void 0 !== i.todayBtnMode) {
                            switch (i.todayBtnMode) {
                                case 0:
                                case 1:
                                    s.todayBtnMode = i.todayBtnMode;
                            }
                            delete i.todayBtnMode;
                        }
                        return (
                            Object.keys(i).forEach((e) => {
                                void 0 !== i[e] && (0, r.l$)(o, e) && (s[e] = i[e]);
                            }),
                            s
                        );
                    }
                    var v = (0, r.zh)(
                            `<div class="datepicker hidden">
                                <div class="datepicker-picker inline-block rounded-lg calendar_background shadow-lg p-4">
                                    <div class="datepicker-header">
                                        <div class="datepicker-title calendar_background calendar_text px-2 py-3 text-center font-semibold"></div>
                                        <div class="datepicker-controls flex justify-between mb-2">
                                            <button type="button" class="rounded-lg calendar_text calendar_button text-lg p-2.5 focus:outline-none focus:ring-2 prev-btn"></button>
                                            <button type="button" class="text-sm rounded-lg calendar_text font-semibold py-2.5 px-5 calendar_button focus:outline-none focus:ring-2 view-switch"></button>
                                            <button type="button" class="rounded-lg calendar_text calendar_button text-lg p-2.5 focus:outline-none focus:ring-2 next-btn"></button>
                                        </div>
                                    </div>
                                    <div class="datepicker-main p-1"></div>
                                        <div class="datepicker-footer">
                                            <div class="datepicker-controls flex space-x-2 rtl:space-x-reverse mt-2">
                                                <button type="button" class="%buttonClass% today-btn text-white bg-blue-700 !bg-primary-700 dark:bg-blue-600 dark:!bg-primary-600 hover:bg-blue-800 hover:!bg-primary-800 dark:hover:bg-blue-700 dark:hover:!bg-primary-700 focus:ring-4 focus:ring-blue-300 focus:!ring-primary-300 font-medium rounded-lg text-sm px-5 py-2 text-center w-1/2"></button>
                                                <button type="button" class="%buttonClass% clear-btn calendar_text border border-gray-300 dark:border-gray-600 calendar_button focus:ring-4 focus:ring-blue-300 focus:!ring-primary-300 font-medium rounded-lg text-sm px-5 py-2 text-center w-1/2"></button>
                                            </div>
                                        </div>
                                    </div>
                                </div>`
                        ),
                        x = (0, r.zh)(
                            `<div class="days"><div class="days-of-week grid grid-cols-7 mb-1">${(0, r.em)("span", 7, {
                                class: "dow block flex-1 leading-9 border-0 rounded-lg cursor-default text-center calendar_day_text font-semibold text-sm",
                            })}</div><div class="datepicker-grid w-64 grid grid-cols-7">${(0, r.em)("span", 42, {
                                class: "block flex-1 leading-9 border-0 rounded-lg cursor-default text-center calendar_day_text font-semibold text-sm h-6 leading-6 text-sm font-medium",
                            })}</div></div>`
                        ),
                        D = (0, r.zh)(
                            `<div class="calendar-weeks"><div class="days-of-week flex"><span class="dow h-6 leading-6 text-sm font-medium calendar_day_text"></span></div><div class="weeks">${(0, r.em)("span", 6, {
                                class: "week block flex-1 leading-9 border-0 rounded-lg cursor-default text-center calendar_day_text font-semibold text-sm",
                            })}</div></div>`
                        );
                    class _ {
                        constructor(e, t) {
                            Object.assign(this, t, { picker: e, element: c('<div class="datepicker-view flex"></div>').firstChild, selected: [] }), this.init(this.picker.datepicker.config);
                        }
                        init(e) {
                            void 0 !== e.pickLevel && (this.isMinView = this.id === e.pickLevel), this.setOptions(e), this.updateFocus(), this.updateSelection();
                        }
                        performBeforeHook(e, t, i) {
                            let a = this.beforeShow(new Date(i));
                            switch (typeof a) {
                                case "boolean":
                                    a = { enabled: a };
                                    break;
                                case "string":
                                    a = { classes: a };
                            }
                            if (a) {
                                var n, s;
                                if ((!1 === a.enabled && (e.classList.add("disabled"), (0, r.$C)(this.disabled, t)), a.classes)) {
                                    let d = a.classes.split(/\s+/);
                                    e.classList.add(...d), d.includes("disabled") && (0, r.$C)(this.disabled, t);
                                }
                                a.content &&
                                    ((n = e),
                                    (s = a.content),
                                    $(n),
                                    s instanceof DocumentFragment
                                        ? n.appendChild(s)
                                        : "string" == typeof s
                                        ? n.appendChild(c(s))
                                        : "function" == typeof s.forEach &&
                                          s.forEach((e) => {
                                              n.appendChild(e);
                                          }));
                            }
                        }
                    }
                    function M(e, t) {
                        if (!e || !e[0] || !e[1]) return;
                        let [[i, r], [a, n]] = e;
                        return i > t || a < t ? void 0 : [i === t ? r : -1, a === t ? n : 12];
                    }
                    class S extends _ {
                        constructor(e, t) {
                            super(e, t);
                        }
                        init(e, t = !0) {
                            var i;
                            t &&
                                ((this.navStep = 10 * this.step),
                                (this.beforeShowOption = `beforeShow${[...(i = this.cellClass)].reduce((e, t, i) => e + (i ? t : t.toUpperCase()), "")}`),
                                (this.grid = this.element),
                                this.element.classList.add(this.name, "datepicker-grid", "w-64", "grid", "grid-cols-4"),
                                this.grid.appendChild(c((0, r.em)("span", 12)))),
                                super.init(e);
                        }
                        setOptions(e) {
                            if (
                                ((0, r.l$)(e, "minDate") && (void 0 === e.minDate ? (this.minYear = this.minDate = void 0) : ((this.minYear = (0, a.ak)(e.minDate, this.step)), (this.minDate = (0, a.by)(this.minYear, 0, 1)))),
                                (0, r.l$)(e, "maxDate") && (void 0 === e.maxDate ? (this.maxYear = this.maxDate = void 0) : ((this.maxYear = (0, a.ak)(e.maxDate, this.step)), (this.maxDate = (0, a.by)(this.maxYear, 11, 31)))),
                                void 0 !== e[this.beforeShowOption])
                            ) {
                                let t = e[this.beforeShowOption];
                                this.beforeShow = "function" == typeof t ? t : void 0;
                            }
                        }
                        updateFocus() {
                            let e = new Date(this.picker.viewDate),
                                t = (0, a.ak)(e, this.navStep),
                                i = t + 9 * this.step;
                            (this.first = t), (this.last = i), (this.start = t - this.step), (this.focused = (0, a.ak)(e, this.step));
                        }
                        updateSelection() {
                            let { dates: e, rangepicker: t } = this.picker.datepicker; 
                            (this.selected = e.reduce((e, t) => (0, r.$C)(e, (0, a.ak)(t, this.step)), [])),
                                t &&
                                    t.dates &&
                                    (this.range = t.dates.map((e) => {  
                                        if (void 0 !== e) return (0, a.ak)(e, this.step);
                                    })); 
                        }
                        render() {
                            (this.disabled = []),
                                this.picker.setViewSwitchLabel(`${this.first}-${this.last}`),
                                this.picker.setPrevBtnDisabled(this.first <= this.minYear),
                                this.picker.setNextBtnDisabled(this.last >= this.maxYear),
                                Array.from(this.grid.children).forEach((e, t) => {
                                    let i = e.classList,
                                        r = this.start + t * this.step,
                                        n = (0, a.by)(r, 0, 1);
                                    if (
                                        ((e.className = `datepicker-cell calendar_button block flex-1 leading-9 border-0 rounded-lg cursor-pointer text-center calendar_text font-semibold text-sm ${this.cellClass}`),
                                        this.isMinView && (e.dataset.date = n),
                                        (e.textContent = e.dataset.year = r),
                                        0 === t ? i.add("prev") : 11 === t && i.add("next"),
                                        (r < this.minYear || r > this.maxYear) && i.add("disabled"),
                                        this.range)
                                    ) {
                                        let [s, d] = this.range;
                                        r > s && r < d && i.add("range"), r === s && i.add("range-start"), r === d && i.add("range-end");
                                    }
                                    this.selected.includes(r) &&
                                        //(i.add("selected", "bg-blue-700", "!bg-primary-700", "text-white", "dark:bg-blue-600", "dark:!bg-primary-600", "dark:text-white"),
                                        //i.remove("text-gray-900", "hover:bg-gray-100", "dark:text-white", "dark:hover:bg-gray-600")),
                                        r === this.focused && i.add("focused"),
                                        this.beforeShow && this.performBeforeHook(e, r, n);
                                });
                        }
                        refresh() {
                            let [e, t] = this.range || [];
                            this.grid.querySelectorAll(".range, .range-start, .range-end, .selected, .focused").forEach((e) => {
                                e.classList.remove("range", "range-start", "range-end", "selected", "bg-blue-700", "!bg-primary-700", "text-white", "dark:bg-blue-600", "dark!bg-primary-600", "dark:text-white", "focused");
                            }),
                                Array.from(this.grid.children).forEach((i) => {
                                    let r = Number(i.textContent),
                                        a = i.classList;
                                    r > e && r < t && a.add("range"),
                                        r === e && a.add("range-start"),
                                        r === t && a.add("range-end"),
                                        this.selected.includes(r) &&
                                            (a.add("selected", "bg-blue-700", "!bg-primary-700", "text-white", "dark:bg-blue-600", "dark:!bg-primary-600", "dark:text-white"),
                                            a.remove("text-gray-900", "hover:bg-gray-100", "dark:text-white", "dark:hover:bg-gray-600")),
                                        r === this.focused && a.add("focused");
                                });
                        }
                        refreshFocus() {
                            let e = Math.round((this.focused - this.start) / this.step);
                            this.grid.querySelectorAll(".focused").forEach((e) => {
                                e.classList.remove("focused");
                            }),
                                this.grid.children[e].classList.add("focused");
                        }
                    }
                    function C(e, t) {
                        let i = { date: e.getDate(), viewDate: new Date(e.picker.viewDate), viewId: e.picker.currentView.id, datepicker: e };
                        e.element.dispatchEvent(new CustomEvent(t, { detail: i }));
                    }
                    function L(e, t) {
                        let { minDate: i, maxDate: n } = e.config,
                            { currentView: s, viewDate: d } = e.picker,
                            o;
                        switch (s.id) {
                            case 0:
                                o = (0, a.zI)(d, t);
                                break;
                            case 1:
                                o = (0, a.Bc)(d, t);
                                break;
                            default:
                                o = (0, a.Bc)(d, t * s.navStep);
                        }
                        (o = (0, r.jG)(o, i, n)), e.picker.changeFocus(o).render();
                    }
                    function E(e) {
                        let t = e.picker.currentView.id;
                        t !== e.config.maxView && e.picker.changeView(t + 1).render();
                    }
                    function F(e) {
                        e.config.updateOnBlur ? e.update({ autohide: !0 }) : (e.refresh("input"), e.hide());
                    }
                    function B(e) {
                        E(e);
                    }
                    function O(e, t) {
                        if ((void 0 !== t.title && (t.title ? ((e.controls.title.textContent = t.title), u(e.controls.title)) : ((e.controls.title.textContent = ""), h(e.controls.title))), t.prevArrow)) {
                            let i = e.controls.prevBtn;
                            $(i),
                                t.prevArrow.forEach((e) => {
                                    i.appendChild(e.cloneNode(!0));
                                });
                        }
                        if (t.nextArrow) {
                            let n = e.controls.nextBtn;
                            $(n),
                                t.nextArrow.forEach((e) => {
                                    n.appendChild(e.cloneNode(!0));
                                });
                        }
                        if (
                            (t.locale && ((e.controls.todayBtn.textContent = t.locale.today), (e.controls.clearBtn.textContent = t.locale.clear)),
                            void 0 !== t.todayBtn && (t.todayBtn ? u(e.controls.todayBtn) : h(e.controls.todayBtn)),
                            (0, r.l$)(t, "minDate") || (0, r.l$)(t, "maxDate"))
                        ) {
                            let { minDate: s, maxDate: d } = e.datepicker.config;
                            e.controls.todayBtn.disabled = !(0, r.mh)((0, a.Lg)(), s, d);
                        }
                        void 0 !== t.clearBtn && (t.clearBtn ? u(e.controls.clearBtn) : h(e.controls.clearBtn));
                    }
                    function V(e) {
                        let { dates: t, config: i } = e,
                            a = t.length > 0 ? (0, r.Jm)(t) : i.defaultViewDate;
                        return (0, r.jG)(a, i.minDate, i.maxDate);
                    }
                    function Y(e, t) {
                        let i = new Date(e.viewDate),
                            r = new Date(t),
                            { id: a, year: n, first: s, last: d } = e.currentView,
                            o = r.getFullYear();
                        switch (((e.viewDate = t), o !== i.getFullYear() && C(e.datepicker, "changeYear"), r.getMonth() !== i.getMonth() && C(e.datepicker, "changeMonth"), a)) {
                            case 0:
                                return t < s || t > d;
                            case 1:
                                return o !== n;
                            default:
                                return o < s || o > d;
                        }
                    }
                    function A(e) {
                        return window.getComputedStyle(e).direction;
                    }
                    function W(e, t, i, n) {
                        let s = e.picker,
                            d = s.currentView,
                            o = d.step || 1,
                            l,
                            c,
                            h = s.viewDate;
                        switch (d.id) {
                            case 0:
                                (h = n ? (0, a.E4)(h, 7 * i) : t.ctrlKey || t.metaKey ? (0, a.Bc)(h, i) : (0, a.E4)(h, i)), (l = a.E4), (c = (e) => d.disabled.includes(e));
                                break;
                            case 1:
                                (h = (0, a.zI)(h, n ? 4 * i : i)),
                                    (l = a.zI),
                                    (c = (e) => {
                                        let t = new Date(e),
                                            { year: i, disabled: r } = d;
                                        return t.getFullYear() === i && r.includes(t.getMonth());
                                    });
                                break;
                            default:
                                (h = (0, a.Bc)(h, i * (n ? 4 : 1) * o)), (l = a.Bc), (c = (e) => d.disabled.includes((0, a.ak)(e, o)));
                        }
                        void 0 !==
                            (h = (function e(t, i, a, n, s, d) {
                                if ((0, r.mh)(t, s, d)) return n(t) ? e(i(t, a), i, a, n, s, d) : t;
                            })(h, l, i < 0 ? -o : o, c, d.minDate, d.maxDate)) && s.changeFocus(h).render();
                    }
                    function N(e, t) {
                        return e.map((e) => (0, n.p6)(e, t.format, t.locale)).join(t.dateDelimiter);
                    }
                    function H(e, t, i = !1) {
                        let { config: a, dates: s, rangepicker: d } = e;
                        if (0 === t.length) return i ? [] : void 0;
                        let o = d && e === d.datepickers[1],
                            l = t.reduce((e, t) => {
                                let i = (0, n.sG)(t, a.format, a.locale);
                                if (void 0 === i) return e;
                                if (a.pickLevel > 0) {
                                    let s = new Date(i);
                                    i = 1 === a.pickLevel ? (o ? s.setMonth(s.getMonth() + 1, 0) : s.setDate(1)) : o ? s.setFullYear(s.getFullYear() + 1, 0, 0) : s.setMonth(0, 1);
                                }
                                return !(0, r.mh)(i, a.minDate, a.maxDate) || e.includes(i) || a.datesDisabled.includes(i) || a.daysOfWeekDisabled.includes(new Date(i).getDay()) || e.push(i), e;
                            }, []);
                        return 0 !== l.length
                            ? (a.multidate &&
                                  !i &&
                                  (l = l.reduce(
                                      (e, t) => (s.includes(t) || e.push(t), e),
                                      s.filter((e) => !l.includes(e))
                                  )),
                              a.maxNumberOfDates && l.length > a.maxNumberOfDates ? l.slice(-1 * a.maxNumberOfDates) : l)
                            : void 0;
                    }
                    function K(e, t = 3, i = !0) {
                        let { config: r, picker: a, inputField: n } = e;
                        if (2 & t) {
                            let s = a.active ? r.pickLevel : r.startView;
                            a.update().changeView(s).render(i);
                        }
                        1 & t && n && (n.value = N(e.dates, r));
                    }
                    function T(e, t, i) {
                        let { clear: r, render: a, autohide: n } = i;
                        void 0 === a && (a = !0), a ? void 0 === n && (n = e.config.autohide) : (n = !1);
                        let s = H(e, t, r);
                        s && (s.toString() !== e.dates.toString() ? ((e.dates = s), K(e, a ? 3 : 1), C(e, "changeDate")) : K(e, 1), n && e.hide());
                    }
                    class P {
                        constructor(e, t = {}, i) {
                            (e.datepicker = this), (this.element = e);
                            let d = (this.config = Object.assign({ buttonClass: (t.buttonClass && String(t.buttonClass)) || "button", container: document.body, defaultViewDate: (0, a.Lg)(), maxDate: void 0, minDate: void 0 }, w(o, this)));
                            (this._options = t), Object.assign(d, w(t, this));
                            let l = (this.inline = "INPUT" !== e.tagName),
                                $,
                                g;
                            if (l) (d.container = e), (g = (0, r.W7)(e.dataset.date, d.dateDelimiter)), delete e.dataset.date;
                            else {
                                let f = t.container ? document.querySelector(t.container) : null;
                                f && (d.container = f), ($ = this.inputField = e).classList.add("datepicker-input"), (g = (0, r.W7)($.value, d.dateDelimiter));
                            }
                            if (i) {
                                let p = i.inputs.indexOf($),
                                    m = i.datepickers;
                                if (p < 0 || p > 1 || !Array.isArray(m)) throw Error("Invalid rangepicker object.");
                                (m[p] = this), Object.defineProperty(this, "rangepicker", { get: () => i });
                            }
                            this.dates = [];
                            let y = H(this, g);
                            y && y.length > 0 && (this.dates = y), $ && ($.value = N(this.dates, d));
                            let b = (this.picker = new (class e {
                                constructor(e) {
                                    this.datepicker = e;
                                    let t = v.replace(/%buttonClass%/g, e.config.buttonClass),
                                        i = (this.element = c(t).firstChild),
                                        [d, o, l] = i.firstChild.children,
                                        $ = d.firstElementChild,
                                        [g, f, p] = d.lastElementChild.children,
                                        [m, y] = l.firstChild.children,
                                        b = { title: $, prevBtn: g, viewSwitch: f, nextBtn: p, todayBtn: m, clearBtn: y };
                                    (this.main = o), (this.controls = b);
                                    let k = e.inline ? "inline" : "dropdown";
                                    i.classList.add(`datepicker-${k}`),
                                        "dropdown" === k && i.classList.add("dropdown", "absolute", "top-0", "left-0", "z-50", "pt-2"),
                                        O(this, e.config),
                                        (this.viewDate = V(e)),
                                        (0, s.cF)(e, [
                                            [
                                                i,
                                                "click",
                                                function e(t) {
                                                    t.inline || t.config.disableTouchKeyboard || t.inputField.focus();
                                                }.bind(null, e),
                                                { capture: !0 },
                                            ],
                                            [
                                                o,
                                                "click",
                                                function e(t, i) {
                                                    let r = (0, s.He)(i, ".datepicker-cell");
                                                    if (!r || r.classList.contains("disabled")) return;
                                                    let { id: n, isMinView: d } = t.picker.currentView;
                                                    d
                                                        ? t.setDate(Number(r.dataset.date))
                                                        : (function e(t, i) {
                                                              let r = t.picker,
                                                                  n = new Date(r.viewDate),
                                                                  s = r.currentView.id,
                                                                  d = 1 === s ? (0, a.zI)(n, i - n.getMonth()) : (0, a.Bc)(n, i - n.getFullYear());
                                                              r.changeFocus(d)
                                                                  .changeView(s - 1)
                                                                  .render();
                                                          })(t, Number(1 === n ? r.dataset.month : r.dataset.year));
                                                    t.element.dispatchEvent(new Event("change"));  
                                                }.bind(null, e),
                                            ],
                                            [b.viewSwitch, "click", B.bind(null, e)],
                                            [
                                                b.prevBtn,
                                                "click",
                                                function e(t) {
                                                    L(t, -1);
                                                }.bind(null, e),
                                            ],
                                            [
                                                b.nextBtn,
                                                "click",
                                                function e(t) {
                                                    L(t, 1);
                                                }.bind(null, e),
                                            ],
                                            [
                                                b.todayBtn,
                                                "click",
                                                function e(t) {
                                                    let i = t.picker,
                                                        r = (0, a.Lg)();
                                                    if (1 === t.config.todayBtnMode) {
                                                        if (t.config.autohide) return void t.setDate(r);
                                                        t.setDate(r, { render: !1 }), i.update();
                                                    }
                                                    i.viewDate !== r && i.changeFocus(r), i.changeView(0).render();
                                                }.bind(null, e),
                                            ],
                                            [
                                                b.clearBtn,
                                                "click",
                                                function e(t) {
                                                    t.setDate({ clear: !0 });
                                                }.bind(null, e),
                                            ],
                                        ]),
                                        (this.views = [
                                            new (class e extends _ {
                                                constructor(e) {
                                                    super(e, { id: 0, name: "days", cellClass: "day" });
                                                }
                                                init(e, t = !0) {
                                                    if (t) {
                                                        let i = c(x).firstChild;
                                                        (this.dow = i.firstChild), (this.grid = i.lastChild), this.element.appendChild(i);
                                                    }
                                                    super.init(e);
                                                }
                                                setOptions(e) {
                                                    let t;
                                                    if (
                                                        ((0, r.l$)(e, "minDate") && (this.minDate = e.minDate),
                                                        (0, r.l$)(e, "maxDate") && (this.maxDate = e.maxDate),
                                                        e.datesDisabled && (this.datesDisabled = e.datesDisabled),
                                                        e.daysOfWeekDisabled && ((this.daysOfWeekDisabled = e.daysOfWeekDisabled), (t = !0)),
                                                        e.daysOfWeekHighlighted && (this.daysOfWeekHighlighted = e.daysOfWeekHighlighted),
                                                        void 0 !== e.todayHighlight && (this.todayHighlight = e.todayHighlight),
                                                        void 0 !== e.weekStart && ((this.weekStart = e.weekStart), (this.weekEnd = e.weekEnd), (t = !0)),
                                                        e.locale)
                                                    ) {
                                                        let i = (this.locale = e.locale);
                                                        (this.dayNames = i.daysMin), (this.switchLabelFormat = i.titleFormat), (t = !0);
                                                    }
                                                    if ((void 0 !== e.beforeShowDay && (this.beforeShow = "function" == typeof e.beforeShowDay ? e.beforeShowDay : void 0), void 0 !== e.calendarWeeks)) {
                                                        if (e.calendarWeeks && !this.calendarWeeks) {
                                                            let a = c(D).firstChild;
                                                            (this.calendarWeeks = { element: a, dow: a.firstChild, weeks: a.lastChild }), this.element.insertBefore(a, this.element.firstChild);
                                                        } else this.calendarWeeks && !e.calendarWeeks && (this.element.removeChild(this.calendarWeeks.element), (this.calendarWeeks = null));
                                                    }
                                                    void 0 !== e.showDaysOfWeek && (e.showDaysOfWeek ? (u(this.dow), this.calendarWeeks && u(this.calendarWeeks.dow)) : (h(this.dow), this.calendarWeeks && h(this.calendarWeeks.dow))),
                                                        t &&
                                                            Array.from(this.dow.children).forEach((e, t) => {
                                                                let i = (this.weekStart + t) % 7;
                                                                (e.textContent = this.dayNames[i]),
                                                                    (e.className = this.daysOfWeekDisabled.includes(i)
                                                                        ? "dow disabled text-center h-6 leading-6 text-sm font-medium calendar_day_text cursor-not-allowed"
                                                                        : "dow text-center h-6 leading-6 text-sm font-medium calendar_day_text");
                                                            });
                                                }
                                                updateFocus() {
                                                    let e = new Date(this.picker.viewDate),
                                                        t = e.getFullYear(),
                                                        i = e.getMonth(),
                                                        r = (0, a.by)(t, i, 1),
                                                        n = (0, a.fr)(r, this.weekStart, this.weekStart);
                                                    (this.first = r), (this.last = (0, a.by)(t, i + 1, 0)), (this.start = n), (this.focused = this.picker.viewDate);
                                                }
                                                updateSelection() {
                                                    let { dates: e, rangepicker: t } = this.picker.datepicker;
                                                    (this.selected = e), t && (this.range = t.dates);
                                                }
                                                render() {
                                                    (this.today = this.todayHighlight ? (0, a.Lg)() : void 0), (this.disabled = [...this.datesDisabled]);
                                                    let e = (0, n.p6)(this.focused, this.switchLabelFormat, this.locale);
                                                    if ((this.picker.setViewSwitchLabel(e), this.picker.setPrevBtnDisabled(this.first <= this.minDate), this.picker.setNextBtnDisabled(this.last >= this.maxDate), this.calendarWeeks)) {
                                                        let t = (0, a.fr)(this.first, 1, 1);
                                                        Array.from(this.calendarWeeks.weeks.children).forEach((e, i) => {
                                                            e.textContent = (0, a.Qk)((0, a.jh)(t, i));
                                                        });
                                                    }
                                                    Array.from(this.grid.children).forEach((e, t) => {
                                                        let i = e.classList,
                                                            n = (0, a.E4)(this.start, t),
                                                            s = new Date(n),
                                                            d = s.getDay();
                                                        if (
                                                            ((e.className = `datepicker-cell calendar_button block flex-1 leading-9 border-0 rounded-lg cursor-pointer text-center calendar_text font-semibold text-sm ${this.cellClass}`),
                                                            (e.dataset.date = n),
                                                            (e.textContent = s.getDate()),
                                                            n < this.first ? i.add("prev") : n > this.last && i.add("next"),
                                                            this.today === n && i.add("today", "bg-gray-100", "dark:bg-gray-600"),
                                                            (n < this.minDate || n > this.maxDate || this.disabled.includes(n)) && i.add("disabled", "cursor-not-allowed"),
                                                            this.daysOfWeekDisabled.includes(d) && (i.add("disabled", "cursor-not-allowed"), (0, r.$C)(this.disabled, n)),
                                                            this.daysOfWeekHighlighted.includes(d) && i.add("highlighted"),
                                                            this.range)
                                                        ) {
                                                            let [o, l] = this.range;
                                                            n > o && n < l && (i.add("range", "bg-gray-200", "dark:bg-gray-600"), i.remove("rounded-lg", "rounded-l-lg", "rounded-r-lg")),
                                                                n === o && (i.add("range-start", "bg-gray-100", "dark:bg-gray-600", "rounded-l-lg"), i.remove("rounded-lg", "rounded-r-lg")),
                                                                n === l && (i.add("range-end", "bg-gray-100", "dark:bg-gray-600", "rounded-r-lg"), i.remove("rounded-lg", "rounded-l-lg"));
                                                        }
                                                        this.selected.includes(n) &&
                                                            (i.add("selected", "bg-blue-700", "!bg-primary-700", "text-white", "dark:bg-blue-600", "dark:!bg-primary-600", "dark:text-white"),
                                                            i.remove("text-gray-900", "text-gray-500", "hover:bg-gray-100", "dark:text-white", "dark:hover:bg-gray-600", "dark:bg-gray-600", "bg-gray-100", "bg-gray-200")),
                                                            n === this.focused && i.add("focused"),
                                                            this.beforeShow && this.performBeforeHook(e, n, n);
                                                    });
                                                }
                                                refresh() {
                                                    let [e, t] = this.range || [];
                                                    this.grid.querySelectorAll(".range, .range-start, .range-end, .selected, .focused").forEach((e) => {
                                                        e.classList.remove(
                                                            "range",
                                                            "range-start",
                                                            "range-end",
                                                            "selected",
                                                            "bg-blue-700",
                                                            "!bg-primary-700",
                                                            "text-white",
                                                            "dark:bg-blue-600",
                                                            "dark:!bg-primary-600",
                                                            "dark:text-white",
                                                            "focused"
                                                        ),
                                                            e.classList.add("text-gray-900", "rounded-lg", "dark:text-white");
                                                    }),
                                                        Array.from(this.grid.children).forEach((i) => {
                                                            let r = Number(i.dataset.date),
                                                                a = i.classList;
                                                            a.remove("bg-gray-200", "dark:bg-gray-600", "rounded-l-lg", "rounded-r-lg"),
                                                                r > e && r < t && (a.add("range", "bg-gray-200", "dark:bg-gray-600"), a.remove("rounded-lg")),
                                                                r === e && (a.add("range-start", "bg-gray-200", "dark:bg-gray-600", "rounded-l-lg"), a.remove("rounded-lg", "rounded-r-lg")),
                                                                r === t && (a.add("range-end", "bg-gray-200", "dark:bg-gray-600", "rounded-r-lg"), a.remove("rounded-lg", "rounded-l-lg")),
                                                                this.selected.includes(r) &&
                                                                    (a.add("selected", "bg-blue-700", "!bg-primary-700", "text-white", "dark:bg-blue-600", "dark:!bg-primary-600", "dark:text-white"),
                                                                    a.remove("text-gray-900", "hover:bg-gray-100", "dark:text-white", "dark:hover:bg-gray-600", "bg-gray-100", "bg-gray-200", "dark:bg-gray-600")),
                                                                r === this.focused && a.add("focused");
                                                        });
                                                }
                                                refreshFocus() {
                                                    let e = Math.round((this.focused - this.start) / 864e5);
                                                    this.grid.querySelectorAll(".focused").forEach((e) => {
                                                        e.classList.remove("focused");
                                                    }),
                                                        this.grid.children[e].classList.add("focused");
                                                }
                                            })(this),
                                            new (class e extends _ {
                                                constructor(e) {
                                                    super(e, { id: 1, name: "months", cellClass: "month" });
                                                }
                                                init(e, t = !0) {
                                                    t &&
                                                        ((this.grid = this.element),
                                                        this.element.classList.add("months", "datepicker-grid", "w-64", "grid", "grid-cols-4"),
                                                        this.grid.appendChild(c((0, r.em)("span", 12, { "data-month": (e) => e })))),
                                                        super.init(e);
                                                }
                                                setOptions(e) {
                                                    if ((e.locale && (this.monthNames = e.locale.monthsShort), (0, r.l$)(e, "minDate"))) {
                                                        if (void 0 === e.minDate) this.minYear = this.minMonth = this.minDate = void 0;
                                                        else {
                                                            let t = new Date(e.minDate);
                                                            (this.minYear = t.getFullYear()), (this.minMonth = t.getMonth()), (this.minDate = t.setDate(1));
                                                        }
                                                    }
                                                    if ((0, r.l$)(e, "maxDate")) {
                                                        if (void 0 === e.maxDate) this.maxYear = this.maxMonth = this.maxDate = void 0;
                                                        else {
                                                            let i = new Date(e.maxDate);
                                                            (this.maxYear = i.getFullYear()), (this.maxMonth = i.getMonth()), (this.maxDate = (0, a.by)(this.maxYear, this.maxMonth + 1, 0));
                                                        }
                                                    }
                                                    void 0 !== e.beforeShowMonth && (this.beforeShow = "function" == typeof e.beforeShowMonth ? e.beforeShowMonth : void 0);
                                                }
                                                updateFocus() {
                                                    let e = new Date(this.picker.viewDate);
                                                    (this.year = e.getFullYear()), (this.focused = e.getMonth());
                                                }
                                                updateSelection() { 
                                                    let { dates: e, rangepicker: t } = this.picker.datepicker;
                                                    (this.selected = e.reduce((e, t) => {
                                                        let i = new Date(t),
                                                            a = i.getFullYear(),
                                                            n = i.getMonth();
                                                        return void 0 === e[a] ? (e[a] = [n]) : (0, r.$C)(e[a], n), e;
                                                    }, {})),
                                                        t &&
                                                            t.dates &&
                                                            (this.range = t.dates.map((e) => { 
                                                                let t = new Date(e);
                                                                return isNaN(t) ? void 0 : [t.getFullYear(), t.getMonth()];
                                                            }));
                                                }
                                                render() {
                                                    (this.disabled = []), this.picker.setViewSwitchLabel(this.year), this.picker.setPrevBtnDisabled(this.year <= this.minYear), this.picker.setNextBtnDisabled(this.year >= this.maxYear);
                                                    let e = this.selected[this.year] || [],
                                                        t = this.year < this.minYear || this.year > this.maxYear,
                                                        i = this.year === this.minYear,
                                                        r = this.year === this.maxYear,
                                                        n = M(this.range, this.year);
                                                    Array.from(this.grid.children).forEach((s, d) => {
                                                        let o = s.classList,
                                                            l = (0, a.by)(this.year, d, 1);
                                                        if (
                                                            ((s.className = `datepicker-cell calendar_button block flex-1 leading-9 border-0 rounded-lg cursor-pointer text-center calendar_month_text font-semibold text-sm ${this.cellClass}`),
                                                            this.isMinView && (s.dataset.date = l),
                                                            (s.textContent = this.monthNames[d]),
                                                            (t || (i && d < this.minMonth) || (r && d > this.maxMonth)) && o.add("disabled"),
                                                            n)
                                                        ) {
                                                            let [c, h] = n;
                                                            d > c && d < h && o.add("range"), d === c && o.add("range-start"), d === h && o.add("range-end");
                                                        }
                                                        e.includes(d) &&
                                                            (o.add("selected", "bg-blue-700", "!bg-primary-700", "text-white", "dark:bg-blue-600", "dark:!bg-primary-600", "dark:text-white"),
                                                            o.remove("text-gray-900", "hover:bg-gray-100", "dark:text-white", "dark:hover:bg-gray-600")),
                                                            d === this.focused && o.add("focused"),
                                                            this.beforeShow && this.performBeforeHook(s, d, l);
                                                    });
                                                }
                                                refresh() {
                                                    let e = this.selected[this.year] || [],
                                                        [t, i] = M(this.range, this.year) || [];
                                                    this.grid.querySelectorAll(".range, .range-start, .range-end, .selected, .focused").forEach((e) => {
                                                        e.classList.remove(
                                                            "range",
                                                            "range-start",
                                                            "range-end",
                                                            "selected",
                                                            "bg-blue-700",
                                                            "!bg-primary-700",
                                                            "dark:bg-blue-600",
                                                            "dark:!bg-primary-700",
                                                            "dark:text-white",
                                                            "text-white",
                                                            "focused"
                                                        ),
                                                            e.classList.add("text-gray-900", "hover:bg-gray-100", "dark:text-white", "dark:hover:bg-gray-600");
                                                    }),
                                                        Array.from(this.grid.children).forEach((r, a) => {
                                                            let n = r.classList;
                                                            a > t && a < i && n.add("range"),
                                                                a === t && n.add("range-start"),
                                                                a === i && n.add("range-end"),
                                                                e.includes(a) &&
                                                                    (n.add("selected", "bg-blue-700", "!bg-primary-700", "text-white", "dark:bg-blue-600", "dark:!bg-primary-600", "dark:text-white"),
                                                                    n.remove("text-gray-900", "hover:bg-gray-100", "dark:text-white", "dark:hover:bg-gray-600")),
                                                                a === this.focused && n.add("focused");
                                                        });
                                                }
                                                refreshFocus() {
                                                    this.grid.querySelectorAll(".focused").forEach((e) => {
                                                        e.classList.remove("focused");
                                                    }),
                                                        this.grid.children[this.focused].classList.add("focused");
                                                }
                                            })(this),
                                            new S(this, { id: 2, name: "years", cellClass: "year", step: 1 }),
                                            new S(this, { id: 3, name: "decades", cellClass: "decade", step: 10 }),
                                        ]),
                                        (this.currentView = this.views[e.config.startView]),
                                        this.currentView.render(),
                                        this.main.appendChild(this.currentView.element),
                                        e.config.container.appendChild(this.element);
                                }
                                setOptions(e) {
                                    O(this, e),
                                        this.views.forEach((t) => {
                                            t.init(e, !1);
                                        }),
                                        this.currentView.render();
                                }
                                detach() {
                                    this.datepicker.config.container.removeChild(this.element);
                                }
                                show() {
                                    if (this.active) return;
                                    this.element.classList.add("active", "block"), this.element.classList.remove("hidden"), (this.active = !0);
                                    let e = this.datepicker;
                                    if (!e.inline) {
                                        let t = A(e.inputField);
                                        t !== A(e.config.container) ? (this.element.dir = t) : this.element.dir && this.element.removeAttribute("dir"), this.place(), e.config.disableTouchKeyboard && e.inputField.blur();
                                    }
                                    C(e, "show");
                                }
                                hide() {
                                    this.active && (this.datepicker.exitEditMode(), this.element.classList.remove("active", "block"), this.element.classList.add("active", "block", "hidden"), (this.active = !1), C(this.datepicker, "hide"));
                                }
                                place() {
                                    let { classList: e, style: t } = this.element,
                                        { config: i, inputField: r } = this.datepicker,
                                        a = i.container,
                                        { width: n, height: s } = this.element.getBoundingClientRect(),
                                        { left: d, top: o, width: l } = a.getBoundingClientRect(),
                                        { left: c, top: h, width: u, height: $ } = r.getBoundingClientRect(),
                                        g,
                                        f,
                                        p,
                                        { x: m, y: y } = i.orientation;
                                    a === document.body ? ((g = window.scrollY), (f = c + window.scrollX), (p = h + g)) : ((g = a.scrollTop), (f = c - d), (p = h - o + g)),
                                        "auto" === m && (f < 0 ? ((m = "left"), (f = 10)) : (m = f + n > l || "rtl" === A(r) ? "right" : "left")),
                                        "right" === m && (f -= n - u),
                                        "auto" === y && (y = p - s < g ? "bottom" : "top"),
                                        "top" === y ? (p -= s) : (p += $),
                                        e.remove("datepicker-orient-top", "datepicker-orient-bottom", "datepicker-orient-right", "datepicker-orient-left"),
                                        e.add(`datepicker-orient-${y}`, `datepicker-orient-${m}`),
                                        (t.top = p ? `${p}px` : p),
                                        (t.left = f ? `${f}px` : f);
                                }
                                setViewSwitchLabel(e) {
                                    this.controls.viewSwitch.textContent = e;
                                }
                                setPrevBtnDisabled(e) {
                                    this.controls.prevBtn.disabled = e;
                                }
                                setNextBtnDisabled(e) {
                                    this.controls.nextBtn.disabled = e;
                                }
                                changeView(e) {
                                    let t = this.currentView,
                                        i = this.views[e];
                                    return i.id !== t.id && ((this.currentView = i), (this._renderMethod = "render"), C(this.datepicker, "changeView"), this.main.replaceChild(i.element, t.element)), this;
                                }
                                changeFocus(e) {
                                    return (
                                        (this._renderMethod = Y(this, e) ? "render" : "refreshFocus"),
                                        this.views.forEach((e) => {
                                            e.updateFocus();
                                        }),
                                        this
                                    );
                                }
                                update() {
                                    let e = V(this.datepicker); 
                                    return (
                                        (this._renderMethod = Y(this, e) ? "render" : "refresh"),
                                        this.views.forEach((e) => {
                                            e.updateFocus(), e.updateSelection();
                                        }),
                                        this
                                    );
                                }
                                render(e = !0) {
                                    let t = (e && this._renderMethod) || "render";
                                    delete this._renderMethod, this.currentView[t]();
                                }
                            })(this));
                            if (l) this.show();
                            else {
                                let k = function e(t, i) {
                                        let r = t.element;
                                        if (r !== document.activeElement) return;
                                        let a = t.picker.element;
                                        (0, s.He)(i, (e) => e === r || e === a) || F(t);
                                    }.bind(null, this),
                                    K = [
                                        [
                                            $,
                                            "keydown",
                                            function e(t, i) {
                                                if ("Tab" === i.key) return void F(t);
                                                let r = t.picker,
                                                    { id: a, isMinView: n } = r.currentView;
                                                if (r.active) {
                                                    if (t.editMode)
                                                        switch (i.key) {
                                                            case "Escape":
                                                                r.hide();
                                                                break;
                                                            case "Enter":
                                                                t.exitEditMode({ update: !0, autohide: t.config.autohide });
                                                                break;
                                                            default:
                                                                return;
                                                        }
                                                    else
                                                        switch (i.key) {
                                                            case "Escape":
                                                                r.hide();
                                                                break;
                                                            case "ArrowLeft":
                                                                if (i.ctrlKey || i.metaKey) L(t, -1);
                                                                else {
                                                                    if (i.shiftKey) return void t.enterEditMode();
                                                                    W(t, i, -1, !1);
                                                                }
                                                                break;
                                                            case "ArrowRight":
                                                                if (i.ctrlKey || i.metaKey) L(t, 1);
                                                                else {
                                                                    if (i.shiftKey) return void t.enterEditMode();
                                                                    W(t, i, 1, !1);
                                                                }
                                                                break;
                                                            case "ArrowUp":
                                                                if (i.ctrlKey || i.metaKey) E(t);
                                                                else {
                                                                    if (i.shiftKey) return void t.enterEditMode();
                                                                    W(t, i, -1, !0);
                                                                }
                                                                break;
                                                            case "ArrowDown":
                                                                if (i.shiftKey && !i.ctrlKey && !i.metaKey) return void t.enterEditMode();
                                                                W(t, i, 1, !0);
                                                                break;
                                                            case "Enter":
                                                                n ? t.setDate(r.viewDate) : r.changeView(a - 1).render();
                                                                break;
                                                            case "Backspace":
                                                            case "Delete":
                                                                return void t.enterEditMode();
                                                            default:
                                                                return void (1 !== i.key.length || i.ctrlKey || i.metaKey || t.enterEditMode());
                                                        }
                                                } else
                                                    switch (i.key) {
                                                        case "ArrowDown":
                                                        case "Escape":
                                                            r.show();
                                                            break;
                                                        case "Enter":
                                                            t.update();
                                                            break;
                                                        default:
                                                            return;
                                                    }
                                                i.preventDefault(), i.stopPropagation();
                                            }.bind(null, this),
                                        ],
                                        [
                                            $,
                                            "focus",
                                            function e(t) {
                                                t.config.showOnFocus && !t._showing && t.show();
                                            }.bind(null, this),
                                        ],
                                        [
                                            $,
                                            "mousedown",
                                            function e(t, i) {
                                                let r = i.target;
                                                (t.picker.active || t.config.showOnClick) &&
                                                    ((r._active = r === document.activeElement),
                                                    (r._clicking = setTimeout(() => {
                                                        delete r._active, delete r._clicking;
                                                    }, 2e3)));
                                            }.bind(null, this),
                                        ],
                                        [
                                            $,
                                            "click",
                                            function e(t, i) {
                                                let r = i.target;
                                                r._clicking && (clearTimeout(r._clicking), delete r._clicking, r._active && t.enterEditMode(), delete r._active, t.config.showOnClick && t.show());
                                            }.bind(null, this),
                                        ],
                                        [
                                            $,
                                            "paste",
                                            function e(t, i) {
                                                i.clipboardData.types.includes("text/plain") && t.enterEditMode();
                                            }.bind(null, this),
                                        ],
                                        [document, "mousedown", k],
                                        [document, "touchstart", k],
                                        [window, "resize", b.place.bind(b)],
                                    ];
                                (0, s.cF)(this, K);
                            }
                        }
                        static formatDate(e, t, i) {
                            return (0, n.p6)(e, t, (i && d[i]) || d.en);
                        }
                        static parseDate(e, t, i) {
                            return (0, n.sG)(e, t, (i && d[i]) || d.en);
                        }
                        static get locales() {
                            return d;
                        }
                        get active() {
                            return !(!this.picker || !this.picker.active);
                        }
                        get pickerElement() {
                            return this.picker ? this.picker.element : void 0;
                        }
                        setOptions(e) {
                            let t = this.picker,
                                i = w(e, this);
                            Object.assign(this._options, e), Object.assign(this.config, i), t.setOptions(i), K(this, 3);
                        }
                        show() {
                            if (this.inputField) {
                                if (this.inputField.disabled) return;
                                this.inputField !== document.activeElement && ((this._showing = !0), this.inputField.focus(), delete this._showing);
                            }
                            this.picker.show();
                        }
                        hide() {
                            this.inline || (this.picker.hide(), this.picker.update().changeView(this.config.startView).render());
                        }
                        destroy() {
                            return this.hide(), (0, s.uV)(this), this.picker.detach(), this.inline || this.inputField.classList.remove("datepicker-input"), delete this.element.datepicker, this;
                        }
                        getDate(e) {
                            let t = e ? (t) => (0, n.p6)(t, e, this.config.locale) : (e) => new Date(e);
                            return this.config.multidate ? this.dates.map(t) : this.dates.length > 0 ? t(this.dates[0]) : void 0;
                        }
                        setDate(...e) {
                            let t = [...e],
                                i = {},
                                a = (0, r.Jm)(e);
                            "object" != typeof a || Array.isArray(a) || a instanceof Date || !a || Object.assign(i, t.pop()), T(this, Array.isArray(t[0]) ? t[0] : t, i);
                        }
                        update(e) {
                            if (this.inline) return;
                            let t = { clear: !0, autohide: !(!e || !e.autohide) };
                            T(this, (0, r.W7)(this.inputField.value, this.config.dateDelimiter), t);
                        }
                        refresh(e, t = !1) {
                            let i;
                            e && "string" != typeof e && ((t = e), (e = void 0)), K(this, (i = "picker" === e ? 2 : "input" === e ? 1 : 3), !t);
                        }
                        enterEditMode() {
                            this.inline || !this.picker.active || this.editMode || ((this.editMode = !0), this.inputField.classList.add("in-edit", "border-blue-700", "!border-primary-700"));
                        }
                        exitEditMode(e) {
                            if (this.inline || !this.editMode) return;
                            let t = Object.assign({ update: !1 }, e);
                            delete this.editMode, this.inputField.classList.remove("in-edit", "border-blue-700", "!border-primary-700"), t.update && this.update(t);
                        }
                    }
                },
                963: function (e, t, i) {
                    i.d(t, {
                        CL: function () {
                            return n;
                        },
                        p6: function () {
                            return $;
                        },
                        sG: function () {
                            return u;
                        },
                    });
                    var r = i(560),
                        a = i(105);
                    let n = /dd?|DD?|mm?|MM?|yy?(?:yy)?/,
                        s = /[\s!-/:-@[-`{-~年月日]+/,
                        d = {},
                        o = {
                            y: (e, t) => new Date(e).setFullYear(parseInt(t, 10)),
                            m(e, t, i) {
                                let r = new Date(e),
                                    a = parseInt(t, 10) - 1;
                                if (isNaN(a)) {
                                    if (!t) return NaN;
                                    let n = t.toLowerCase(),
                                        s = (e) => e.toLowerCase().startsWith(n);
                                    if (((a = i.monthsShort.findIndex(s)) < 0 && (a = i.months.findIndex(s)), a < 0)) return NaN;
                                }
                                return (
                                    r.setMonth(a),
                                    r.getMonth() !==
                                    (function e(t) {
                                        return t > -1 ? t % 12 : e(t + 12);
                                    })(a)
                                        ? r.setDate(0)
                                        : r.getTime()
                                );
                            },
                            d: (e, t) => new Date(e).setDate(parseInt(t, 10)),
                        },
                        l = {
                            d: (e) => e.getDate(),
                            dd: (e) => c(e.getDate(), 2),
                            D: (e, t) => t.daysShort[e.getDay()],
                            DD: (e, t) => t.days[e.getDay()],
                            m: (e) => e.getMonth() + 1,
                            mm: (e) => c(e.getMonth() + 1, 2),
                            M: (e, t) => t.monthsShort[e.getMonth()],
                            MM: (e, t) => t.months[e.getMonth()],
                            y: (e) => e.getFullYear(),
                            yy: (e) => c(e.getFullYear(), 2).slice(-2),
                            yyyy: (e) => c(e.getFullYear(), 4),
                        };
                    function c(e, t) { 
                        return e.toString().padStart(t, "0");
                    }
                    function h(e) {
                        if ("string" != typeof e) throw Error("Invalid date format.");
                        if (e in d) return d[e];
                        let t = e.split(n),
                            i = e.match(RegExp(n, "g"));
                        if (0 === t.length || !i) throw Error("Invalid date format.");
                        let c = i.map((e) => l[e]),
                            h = Object.keys(o).reduce((e, t) => (i.find((e) => "D" !== e[0] && e[0].toLowerCase() === t) && e.push(t), e), []);
                        return (d[e] = {
                            parser(e, t) {
                                let a = e.split(s).reduce((e, t, r) => {
                                    if (t.length > 0 && i[r]) {
                                        let a = i[r][0];
                                        "M" === a ? (e.m = t) : "D" !== a && (e[a] = t);
                                    }
                                    return e;
                                }, {});
                                return h.reduce((e, i) => {
                                    let r = o[i](e, a[i], t);
                                    return isNaN(r) ? e : r;
                                }, (0, r.Lg)());
                            },
                            formatter: (e, i) => c.reduce((r, a, n) => r + `${t[n]}${a(e, i)}`, "") + (0, a.Jm)(t),
                        });
                    }
                    function u(e, t, i) {
                        if (e instanceof Date || "number" == typeof e) {
                            let a = (0, r.xR)(e);
                            return isNaN(a) ? void 0 : a;
                        }
                        if (e) {
                            if ("today" === e) return (0, r.Lg)();
                            if (t && t.toValue) {
                                let n = t.toValue(e, t, i);
                                return isNaN(n) ? void 0 : (0, r.xR)(n);
                            }
                            return h(t).parser(e, i);
                        }
                    }
                    function $(e, t, i) {
                        if (isNaN(e) || (!e && 0 !== e)) return "";
                        let r = "number" == typeof e ? new Date(e) : e;
                        return t.toDisplay ? t.toDisplay(r, t, i) : h(t).formatter(r, i);
                    }
                },
                560: function (e, t, i) {
                    function r(e) {
                        return new Date(e).setHours(0, 0, 0, 0);
                    }
                    function a() {
                        return new Date().setHours(0, 0, 0, 0);
                    }
                    function n(...e) {
                        switch (e.length) {
                            case 0:
                                return a();
                            case 1:
                                return r(e[0]);
                        }
                        let t = new Date(0);
                        return t.setFullYear(...e), t.setHours(0, 0, 0, 0);
                    }
                    function s(e, t) {
                        let i = new Date(e);
                        return i.setDate(i.getDate() + t);
                    }
                    function d(e, t) {
                        return s(e, 7 * t);
                    }
                    function o(e, t) {
                        let i = new Date(e),
                            r = i.getMonth() + t,
                            a = r % 12;
                        a < 0 && (a += 12);
                        let n = i.setMonth(r);
                        return i.getMonth() !== a ? i.setDate(0) : n;
                    }
                    function l(e, t) {
                        let i = new Date(e),
                            r = i.getMonth(),
                            a = i.setFullYear(i.getFullYear() + t);
                        return 1 === r && 2 === i.getMonth() ? i.setDate(0) : a;
                    }
                    function c(e, t) {
                        return (e - t + 7) % 7;
                    }
                    function h(e, t, i = 0) {
                        let r = new Date(e).getDay();
                        return s(e, c(t, i) - c(r, i));
                    }
                    function u(e) {
                        let t = h(e, 4, 1),
                            i = h(new Date(t).setMonth(0, 4), 4, 1);
                        return Math.round((t - i) / 6048e5) + 1;
                    }
                    function $(e, t) {
                        let i = new Date(e).getFullYear();
                        return Math.floor(i / t) * t;
                    }
                    i.d(t, {
                        Bc: function () {
                            return l;
                        },
                        E4: function () {
                            return s;
                        },
                        Lg: function () {
                            return a;
                        },
                        Qk: function () {
                            return u;
                        },
                        ak: function () {
                            return $;
                        },
                        by: function () {
                            return n;
                        },
                        fr: function () {
                            return h;
                        },
                        jh: function () {
                            return d;
                        },
                        xR: function () {
                            return r;
                        },
                        zI: function () {
                            return o;
                        },
                    });
                },
                698: function (e, t, i) {
                    i.d(t, {
                        He: function () {
                            return l;
                        },
                        cF: function () {
                            return s;
                        },
                        uV: function () {
                            return d;
                        },
                    });
                    let r = new WeakMap(),
                        { addEventListener: a, removeEventListener: n } = EventTarget.prototype;
                    function s(e, t) {
                        let i = r.get(e);
                        i || ((i = []), r.set(e, i)),
                            t.forEach((e) => {
                                a.call(...e), i.push(e);
                            });
                    }
                    function d(e) {
                        let t = r.get(e);
                        t &&
                            (t.forEach((e) => {
                                n.call(...e);
                            }),
                            r.delete(e));
                    }
                    if (!Event.prototype.composedPath) {
                        let o = (e, t = []) => {
                            let i;
                            return t.push(e), e.parentNode ? (i = e.parentNode) : e.host ? (i = e.host) : e.defaultView && (i = e.defaultView), i ? o(i, t) : t;
                        };
                        Event.prototype.composedPath = function () {
                            return o(this.target);
                        };
                    }
                    function l(e, t) {
                        return (function e(t, i, r, a = 0) {
                            let n = t[a];
                            return i(n) ? n : n !== r && n.parentElement ? e(t, i, r, a + 1) : void 0;
                        })(e.composedPath(), "function" == typeof t ? t : (e) => e.matches(t), e.currentTarget);
                    }
                },
                105: function (e, t, i) {
                    function r(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                    }
                    function a(e) {
                        return e[e.length - 1];
                    }
                    function n(e, ...t) {
                        return (
                            t.forEach((t) => {
                                e.includes(t) || e.push(t);
                            }),
                            e
                        );
                    }
                    function s(e, t) {
                        return e ? e.split(t) : [];
                    }
                    function d(e, t, i) {
                        return (void 0 === t || e >= t) && (void 0 === i || e <= i);
                    }
                    function o(e, t, i) {
                        return e < t ? t : e > i ? i : e;
                    }
                    function l(e) {
                        return e.replace(/>\s+/g, ">").replace(/\s+</, "<");
                    }
                    i.d(t, {
                        $C: function () {
                            return n;
                        },
                        Jm: function () {
                            return a;
                        },
                        W7: function () {
                            return s;
                        },
                        em: function () {
                            return function e(t, i, r = {}, a = 0, n = "") {
                                n += `<${Object.keys(r).reduce((e, t) => {
                                    let i = r[t];
                                    return "function" == typeof i && (i = i(a)), `${e} ${t}="${i}"`;
                                }, t)}></${t}>`;
                                let s = a + 1;
                                return s < i ? e(t, i, r, s, n) : n;
                            };
                        },
                        jG: function () {
                            return o;
                        },
                        l$: function () {
                            return r;
                        },
                        mh: function () {
                            return d;
                        },
                        zh: function () {
                            return l;
                        },
                    });
                },
                947: function (e, t) {
                    var i = (function () {
                        function e(e, t) {
                            void 0 === t && (t = []), (this._eventType = e), (this._eventFunctions = t);
                        }
                        return (
                            (e.prototype.init = function () {
                                var e = this;
                                this._eventFunctions.forEach(function (t) {
                                    "undefined" != typeof window && window.addEventListener(e._eventType, t);
                                });
                            }),
                            e
                        );
                    })();
                    t.default = i;
                },
            },
            t = {};
        function i(r) {
            var a = t[r];
            if (void 0 !== a) return a.exports;
            var n = (t[r] = { exports: {} });
            return e[r](n, n.exports, i), n.exports;
        }
        (i.d = function (e, t) {
            for (var r in t) i.o(t, r) && !i.o(e, r) && Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
        }),
            (i.o = function (e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
            }),
            (i.r = function (e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 });
            });
        var r = {};
        return (
            (function () {
                i.r(r),
                    i.d(r, {
                        initDatepickers: function () {
                            return s;
                        },
                    });
                var e = i(770),
                    t = i(482),
                    a = i(947),
                    n = function (e) {
                        var t = e.hasAttribute("datepicker-buttons"),
                            i = e.hasAttribute("datepicker-autoselect-today"),
                            r = e.hasAttribute("datepicker-autohide"),
                            a = e.hasAttribute("datepicker-format"),
                            n = e.hasAttribute("datepicker-orientation"),
                            s = e.hasAttribute("datepicker-title"),
                            d = {};
                        return (
                            t && ((d.todayBtn = !0), (d.clearBtn = !0), i && (d.todayBtnMode = 1)),
                            r && (d.autohide = !0),
                            a && (d.format = e.getAttribute("datepicker-format")),
                            n && (d.orientation = e.getAttribute("datepicker-orientation")),
                            s && (d.title = e.getAttribute("datepicker-title")),
                            d
                        );
                    };
                function s() {
                    document.querySelectorAll("[datepicker]").forEach(function (t) {
                        new e.Z(t, n(t));
                    }),
                        document.querySelectorAll("[inline-datepicker]").forEach(function (t) {
                            new e.Z(t, n(t));
                        }),
                        document.querySelectorAll("[date-rangepicker]").forEach(function (e) {
                            new t.Z(e, n(e));
                        });
                }
                new a.default("DOMContentLoaded", [s]).init();
            })(),
            r
        );
    })();
});
