<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;
use Illuminate\Support\Facades\View;
use Illuminate\Support\Facades\Auth;
use App\Models\Setting; 

class SessionMiddleware
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {
        $timezone = session('timezone');
 
        if($timezone){
            date_default_timezone_set($timezone);
        } 
        
        $days   = [
            __('days.sunday'),
            __('days.monday'),
            __('days.tuesday'),
            __('days.wednesday'),
            __('days.thursday'),
            __('days.friday'),
            __('days.saturday'),
        ];

        $roles = [
            1 => __("messages.admin"),
            2 => __("messages.doctor"),
            3 => __("messages.pacient"),
        ];

        $genders = [
            "male" => __("messages.male"),
            "female" => __("messages.female"),
            "other" => __("messages.other"),
        ];

        $currencies = [ 
            'MXN' => 'MXN '.__('currencies.MXN'),
            'USD' => 'USD '.__('currencies.USD'),
            'EUR' => 'EUR '.__('currencies.EUR'),
            'JPY' => 'JPY '.__('currencies.JPY'),
            'GBP' => 'GBP '.__('currencies.GBP'),
            'AUD' => 'AUD '.__('currencies.AUD'),
            'CAD' => 'CAD '.__('currencies.CAD'),
            'CHF' => 'CHF '.__('currencies.CHF'),
            'CNY' => 'CNY '.__('currencies.CNY'),
            'SEK' => 'SEK '.__('currencies.SEK'),
            'NZD' => 'NZD '.__('currencies.NZD'),
            'SGD' => 'SGD '.__('currencies.SGD'),
            'HKD' => 'HKD '.__('currencies.HKD'),
            'NOK' => 'NOK '.__('currencies.NOK'),
            'KRW' => 'KRW '.__('currencies.KRW'),
            'TRY' => 'TRY '.__('currencies.TRY'),
            'RUB' => 'RUB '.__('currencies.RUB'),
            'INR' => 'INR '.__('currencies.INR'),
            'BRL' => 'BRL '.__('currencies.BRL'),
            'ZAR' => 'ZAR '.__('currencies.ZAR'),
        ];

        $months = [ 
            '01' => __('months.january'),
            '02' => __('months.february'),
            '03' => __('months.march'),
            '04' => __('months.april'),
            '05' => __('months.may'),
            '06' => __('months.june'),
            '07' => __('months.july'),
            '08' => __('months.august'),
            '09' => __('months.september'),
            '10' => __('months.october'),
            '11' => __('months.november'),
            '12' => __('months.december'),
        ];

        $countries = [
            'AF' => __('countries.AF'),
            'AL' => __('countries.AL'),
            'DZ' => __('countries.DZ'),
            'AS' => __('countries.AS'),
            'AD' => __('countries.AD'),
            'AO' => __('countries.AO'),
            'AI' => __('countries.AI'),
            'AQ' => __('countries.AQ'),
            'AG' => __('countries.AG'),
            'AR' => __('countries.AR'),
            'AM' => __('countries.AM'),
            'AW' => __('countries.AW'),
            'AU' => __('countries.AU'),
            'AT' => __('countries.AT'),
            'AZ' => __('countries.AZ'),
            'BS' => __('countries.BS'),
            'BH' => __('countries.BH'),
            'BD' => __('countries.BD'),
            'BB' => __('countries.BB'),
            'BY' => __('countries.BY'),
            'BE' => __('countries.BE'),
            'BZ' => __('countries.BZ'),
            'BJ' => __('countries.BJ'),
            'BM' => __('countries.BM'),
            'BT' => __('countries.BT'),
            'BO' => __('countries.BO'),
            'BA' => __('countries.BA'),
            'BW' => __('countries.BW'),
            'BR' => __('countries.BR'),
            'IO' => __('countries.IO'),
            'VG' => __('countries.VG'),
            'BN' => __('countries.BN'),
            'BG' => __('countries.BG'),
            'BF' => __('countries.BF'),
            'BI' => __('countries.BI'),
            'KH' => __('countries.KH'),
            'CM' => __('countries.CM'),
            'CA' => __('countries.CA'),
            'CV' => __('countries.CV'),
            'KY' => __('countries.KY'),
            'CF' => __('countries.CF'),
            'TD' => __('countries.TD'),
            'CL' => __('countries.CL'),
            'CN' => __('countries.CN'),
            'CX' => __('countries.CX'),
            'CC' => __('countries.CC'),
            'CO' => __('countries.CO'),
            'KM' => __('countries.KM'),
            'CK' => __('countries.CK'),
            'CR' => __('countries.CR'),
            'HR' => __('countries.HR'),
            'CU' => __('countries.CU'),
            'CW' => __('countries.CW'),
            'CY' => __('countries.CY'),
            'CZ' => __('countries.CZ'),
            'CD' => __('countries.CD'),
            'DK' => __('countries.DK'),
            'DJ' => __('countries.DJ'),
            'DM' => __('countries.DM'),
            'DO' => __('countries.DO'),
            'TL' => __('countries.TL'),
            'EC' => __('countries.EC'),
            'EG' => __('countries.EG'),
            'SV' => __('countries.SV'),
            'GQ' => __('countries.GQ'),
            'ER' => __('countries.ER'),
            'EE' => __('countries.EE'),
            'ET' => __('countries.ET'),
            'FK' => __('countries.FK'),
            'FO' => __('countries.FO'),
            'FJ' => __('countries.FJ'),
            'FI' => __('countries.FI'),
            'FR' => __('countries.FR'),
            'PF' => __('countries.PF'),
            'GA' => __('countries.GA'),
            'GM' => __('countries.GM'),
            'GE' => __('countries.GE'),
            'DE' => __('countries.DE'),
            'GH' => __('countries.GH'),
            'GI' => __('countries.GI'),
            'GR' => __('countries.GR'),
            'GL' => __('countries.GL'),
            'GD' => __('countries.GD'),
            'GU' => __('countries.GU'),
            'GT' => __('countries.GT'),
            'GG' => __('countries.GG'),
            'GN' => __('countries.GN'),
            'GW' => __('countries.GW'),
            'GY' => __('countries.GY'),
            'HT' => __('countries.HT'),
            'HN' => __('countries.HN'),
            'HK' => __('countries.HK'),
            'HU' => __('countries.HU'),
            'IS' => __('countries.IS'),
            'IN' => __('countries.IN'),
            'ID' => __('countries.ID'),
            'IR' => __('countries.IR'),
            'IQ' => __('countries.IQ'),
            'IE' => __('countries.IE'),
            'IM' => __('countries.IM'),
            'IL' => __('countries.IL'),
            'IT' => __('countries.IT'),
            'CI' => __('countries.CI'),
            'JM' => __('countries.JM'),
            'JP' => __('countries.JP'),
            'JE' => __('countries.JE'),
            'JO' => __('countries.JO'),
            'KZ' => __('countries.KZ'),
            'KE' => __('countries.KE'),
            'KI' => __('countries.KI'),
            'XK' => __('countries.XK'),
            'KW' => __('countries.KW'),
            'KG' => __('countries.KG'),
            'LA' => __('countries.LA'),
            'LV' => __('countries.LV'),
            'LB' => __('countries.LB'),
            'LS' => __('countries.LS'),
            'LR' => __('countries.LR'),
            'LY' => __('countries.LY'),
            'LI' => __('countries.LI'),
            'LT' => __('countries.LT'),
            'LU' => __('countries.LU'),
            'MO' => __('countries.MO'),
            'MK' => __('countries.MK'),
            'MG' => __('countries.MG'),
            'MW' => __('countries.MW'),
            'MY' => __('countries.MY'),
            'MV' => __('countries.MV'),
            'ML' => __('countries.ML'),
            'MT' => __('countries.MT'),
            'MH' => __('countries.MH'),
            'MR' => __('countries.MR'),
            'MU' => __('countries.MU'),
            'YT' => __('countries.YT'),
            'MX' => __('countries.MX'),
            'FM' => __('countries.FM'),
            'MD' => __('countries.MD'),
            'MC' => __('countries.MC'),
            'MN' => __('countries.MN'),
            'ME' => __('countries.ME'),
            'MS' => __('countries.MS'),
            'MA' => __('countries.MA'),
            'MZ' => __('countries.MZ'),
            'MM' => __('countries.MM'),
            'NA' => __('countries.NA'),
            'NR' => __('countries.NR'),
            'NP' => __('countries.NP'),
            'NL' => __('countries.NL'),
            'AN' => __('countries.AN'),
            'NC' => __('countries.NC'),
            'NZ' => __('countries.NZ'),
            'NI' => __('countries.NI'),
            'NE' => __('countries.NE'),
            'NG' => __('countries.NG'),
            'NU' => __('countries.NU'),
            'KP' => __('countries.KP'),
            'NO' => __('countries.NO'),
            'OM' => __('countries.OM'),
            'PK' => __('countries.PK'),
            'PW' => __('countries.PW'),
            'PS' => __('countries.PS'),
            'PA' => __('countries.PA'),
            'PG' => __('countries.PG'),
            'PY' => __('countries.PY'),
            'PE' => __('countries.PE'),
            'PH' => __('countries.PH'),
            'PN' => __('countries.PN'),
            'PL' => __('countries.PL'),
            'PT' => __('countries.PT'),
            'PR' => __('countries.PR'),
            'QA' => __('countries.QA'),
            'CG' => __('countries.CG'),
            'RO' => __('countries.RO'),
            'RU' => __('countries.RU'),
            'RW' => __('countries.RW'),
            'RE' => __('countries.RE'),
            'BL' => __('countries.BL'),
            'SH' => __('countries.SH'),
            'KN' => __('countries.KN'),
            'LC' => __('countries.LC'),
            'MF' => __('countries.MF'),
            'PM' => __('countries.PM'),
            'VC' => __('countries.VC'),
            'WS' => __('countries.WS'),
            'SM' => __('countries.SM'),
            'SA' => __('countries.SA'),
            'SN' => __('countries.SN'),
            'RS' => __('countries.RS'),
            'SC' => __('countries.SC'),
            'SL' => __('countries.SL'),
            'SG' => __('countries.SG'),
            'SX' => __('countries.SX'),
            'SK' => __('countries.SK'),
            'SI' => __('countries.SI'),
            'SB' => __('countries.SB'),
            'SO' => __('countries.SO'),
            'ZA' => __('countries.ZA'),
            'KR' => __('countries.KR'),
            'SS' => __('countries.SS'),
            'ES' => __('countries.ES'),
            'LK' => __('countries.LK'),
            'SD' => __('countries.SD'),
            'SR' => __('countries.SR'),
            'SJ' => __('countries.SJ'),
            'SZ' => __('countries.SZ'),
            'SE' => __('countries.SE'),
            'CH' => __('countries.CH'),
            'SY' => __('countries.SY'),
            'TW' => __('countries.TW'),
            'TJ' => __('countries.TJ'),
            'TZ' => __('countries.TZ'),
            'TH' => __('countries.TH'),
            'TG' => __('countries.TG'),
            'TK' => __('countries.TK'),
            'TO' => __('countries.TO'),
            'TT' => __('countries.TT'),
            'TN' => __('countries.TN'),
            'TR' => __('countries.TR'),
            'TM' => __('countries.TM'),
            'TC' => __('countries.TC'),
            'TV' => __('countries.TV'),
            'UG' => __('countries.UG'),
            'UA' => __('countries.UA'),
            'AE' => __('countries.AE'),
            'GB' => __('countries.GB'),
            'UY' => __('countries.UY'),
            'UZ' => __('countries.UZ'),
            'VU' => __('countries.VU'),
            'VA' => __('countries.VA'),
            'VE' => __('countries.VE'),
            'VN' => __('countries.VN'),
            'WF' => __('countries.WF'),
            'EH' => __('countries.EH'),
            'YE' => __('countries.YE'),
            'ZM' => __('countries.ZM'),
            'ZW' => __('countries.ZW')
        ];       
        
        $doctorID = "";

        if(Auth::user() && Auth::user()->role == 2){
            $doctorID = Auth::user()->doctor->id;
        }
        
        $logos = Setting::select(['value'])->where("key","logos")->first();
        $logos = $logos ? json_decode($logos->value) : json_decode('{"logo_light":"", "logo_dark":"","logo_favicon_light":"", "logo_favicon_dark":"", "logo_public":""}');

        View::share('doctorID', $doctorID);
        View::share('currencies', $currencies);
        View::share('countries', $countries);
        View::share('months', $months);
        View::share('days', $days);
        View::share('roles', $roles); 
        View::share('genders', $genders);  
        View::share('logos', $logos);  

        return $next($request);
    }
}
